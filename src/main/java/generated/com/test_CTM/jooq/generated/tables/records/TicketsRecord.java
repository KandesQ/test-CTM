/*
 * This file is generated by jOOQ.
 */
package com.test_CTM.jooq.generated.tables.records;


import com.test_CTM.jooq.generated.tables.Tickets;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TicketsRecord extends UpdatableRecordImpl<TicketsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.tickets.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tickets.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.tickets.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tickets.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.tickets.carrier_id</code>.
     */
    public void setCarrierId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tickets.carrier_id</code>.
     */
    public Integer getCarrierId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.tickets.route_id</code>.
     */
    public void setRouteId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tickets.route_id</code>.
     */
    public Integer getRouteId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.tickets.departure_at</code>.
     */
    public void setDepartureAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.tickets.departure_at</code>.
     */
    public LocalDateTime getDepartureAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.tickets.arrive_at</code>.
     */
    public void setArriveAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.tickets.arrive_at</code>.
     */
    public LocalDateTime getArriveAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.tickets.seat_number</code>.
     */
    public void setSeatNumber(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.tickets.seat_number</code>.
     */
    public Integer getSeatNumber() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>public.tickets.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.tickets.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TicketsRecord
     */
    public TicketsRecord() {
        super(Tickets.TICKETS);
    }

    /**
     * Create a detached, initialised TicketsRecord
     */
    public TicketsRecord(Integer id, Integer userId, Integer carrierId, Integer routeId, LocalDateTime departureAt, LocalDateTime arriveAt, Integer seatNumber, BigDecimal price) {
        super(Tickets.TICKETS);

        setId(id);
        setUserId(userId);
        setCarrierId(carrierId);
        setRouteId(routeId);
        setDepartureAt(departureAt);
        setArriveAt(arriveAt);
        setSeatNumber(seatNumber);
        setPrice(price);
        resetTouchedOnNotNull();
    }
}
