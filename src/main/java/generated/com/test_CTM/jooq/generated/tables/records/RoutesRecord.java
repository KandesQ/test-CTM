/*
 * This file is generated by jOOQ.
 */
package com.test_CTM.jooq.generated.tables.records;


import com.test_CTM.jooq.generated.tables.Routes;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RoutesRecord extends UpdatableRecordImpl<RoutesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.routes.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.routes.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.routes.from</code>.
     */
    public void setFrom(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.routes.from</code>.
     */
    public String getFrom() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.routes.to</code>.
     */
    public void setTo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.routes.to</code>.
     */
    public String getTo() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoutesRecord
     */
    public RoutesRecord() {
        super(Routes.ROUTES);
    }

    /**
     * Create a detached, initialised RoutesRecord
     */
    public RoutesRecord(Integer id, String from, String to) {
        super(Routes.ROUTES);

        setId(id);
        setFrom(from);
        setTo(to);
        resetTouchedOnNotNull();
    }
}
